const riwni1 = [
    [[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10], [106, 10, 24, 96], [10, 106, 72, 24], [34, 154, 72, 24], [82, 154, 24, 72], [10, 202, 96, 24], [106, 178, 48, 24], [130, 178, 24, 48], [106, 34, 48, 48], [154, 58, 24, 24], [178, 10, 48, 24], [202, 10, 24, 96], [154, 106, 24, 48], [130, 130, 48, 24], [178, 154, 96, 24], [202, 106, 24, 24], [226, 34, 24, 24], [250, 34, 24, 24], [250, 82, 24, 72], [274, 82, 48, 24], [298, 10, 24, 168], [322, 106, 48, 24], [346, 82, 24, 48], [346, 34, 72, 24], [394, 34, 24, 96], [418, 106, 24, 96], [442, 58, 24, 72], [442, 10, 48, 24], [466, 154, 24, 24], [418, 202, 72, 24], [466, 202, 24, 48], [418, 274, 48, 24], [394, 250, 48, 24], [394, 298, 48, 24], [346, 154, 48, 24], [346, 154, 24, 144], [154, 202, 240, 24], [466, 322, 24, 48], [346, 346, 96, 24], [322, 274, 24, 24], [298, 250, 24, 24], [322, 322, 48, 24], [298, 346, 24, 24], [442, 394, 48, 24], [466, 418, 24, 48], [418, 442, 48, 24], [442, 466, 24, 24], [370, 466, 24, 24], [298, 442, 48, 48], [370, 418, 24, 24], [394, 370, 24, 48], [274, 394, 96, 24], [202, 370, 72, 24], [250, 274, 24, 120], [154, 250, 120, 24], [130, 250, 24, 48], [130, 322, 24, 72], [154, 370, 24, 24], [274, 298, 24, 24], [10, 250, 24, 48], [58, 250, 72, 24], [82, 274, 24, 48], [58, 298, 24, 72], [34, 346, 72, 24], [34, 322, 24, 144], [106, 394, 24, 24], [82, 394, 24, 96], [130, 418, 24, 48], [178, 418, 24, 72], [178, 418, 72, 24], [226, 442, 48, 24]], [], [[178, 298, 48, 48]]]
   ,[[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10], [10, 34, 72, 24], [10, 34, 24, 48], [58, 82, 48, 24], [34, 106, 48, 24], [58, 130, 24, 48], [34, 154, 24, 96], [58, 202, 120, 24], [106, 130, 24, 48], [130, 106, 24, 48], [154, 130, 48, 24], [178, 58, 24, 72], [130, 58, 48, 24], [130, 34, 24, 48], [106, 10, 24, 48], [178, 10, 72, 24], [226, 34, 24, 48], [250, 34, 24, 24], [298, 10, 24, 48], [346, 10, 24, 24], [442, 10, 48, 24], [466, 34, 24, 24], [394, 34, 24, 48], [346, 58, 96, 24], [442, 82, 24, 48], [394, 106, 24, 72], [418, 154, 72, 24], [370, 178, 24, 24], [346, 154, 24, 96], [370, 226, 24, 48], [394, 250, 24, 24], [418, 202, 48, 24], [442, 226, 48, 24], [442, 226, 24, 96], [226, 154, 96, 24], [250, 130, 24, 24], [226, 106, 72, 24], [274, 82, 72, 24], [322, 106, 48, 24], [226, 154, 24, 120], [202, 250, 24, 24], [202, 202, 24, 24], [154, 178, 48, 24], [250, 274, 96, 24], [322, 298, 24, 48], [298, 322, 24, 120], [250, 298, 24, 48], [82, 250, 96, 24], [106, 226, 24, 24], [10, 274, 24, 24], [10, 322, 48, 24], [10, 346, 24, 72], [34, 442, 48, 24], [58, 370, 24, 96], [82, 322, 24, 72], [58, 274, 48, 24], [130, 274, 24, 72], [106, 322, 24, 24], [130, 370, 144, 24], [202, 394, 24, 48], [226, 418, 24, 24], [106, 418, 72, 24], [130, 442, 24, 48], [106, 466, 48, 24], [178, 466, 72, 24], [274, 418, 24, 24], [274, 466, 96, 24], [346, 442, 24, 48], [346, 370, 24, 48], [370, 394, 24, 24], [394, 442, 24, 48], [394, 442, 72, 24], [442, 418, 24, 72], [418, 394, 24, 24], [466, 346, 24, 48], [370, 346, 120, 24], [394, 298, 24, 48], [322, 298, 96, 24]], [], [[274, 202, 48, 48]]]
   ,[[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10], [10, 10, 24, 48], [10, 34, 96, 24], [34, 58, 24, 24], [130, 34, 72, 24], [154, 58, 24, 120], [82, 154, 96, 24], [34, 106, 24, 72], [466, 394, 24, 96], [346, 466, 144, 24], [442, 322, 24, 48], [418, 202, 24, 144], [394, 322, 24, 48], [370, 346, 24, 24], [346, 346, 24, 96], [298, 418, 24, 72], [250, 370, 96, 24], [154, 394, 120, 24], [202, 442, 72, 24], [226, 418, 24, 24], [154, 442, 24, 48], [34, 442, 120, 24], [58, 394, 24, 48], [10, 370, 24, 48], [58, 298, 24, 72], [34, 322, 72, 24], [106, 370, 24, 48], [130, 370, 48, 24], [130, 274, 24, 120], [106, 202, 24, 96], [58, 202, 24, 72], [34, 226, 24, 24], [10, 202, 24, 96], [202, 322, 24, 48], [178, 298, 24, 48], [178, 322, 96, 24], [250, 274, 24, 48], [226, 154, 24, 144], [178, 250, 48, 24], [178, 202, 24, 72], [154, 226, 48, 24], [298, 322, 24, 24], [298, 274, 72, 24], [346, 130, 24, 192], [394, 274, 24, 24], [370, 226, 24, 24], [370, 178, 24, 24], [466, 250, 24, 48], [442, 58, 24, 168], [418, 58, 48, 24], [418, 154, 24, 24], [370, 34, 24, 120], [394, 106, 24, 24], [418, 10, 72, 24], [274, 10, 96, 24], [322, 34, 24, 24], [322, 82, 48, 24], [298, 154, 48, 24], [202, 154, 72, 24], [178, 106, 24, 24], [202, 58, 48, 24], [226, 34, 24, 72], [250, 82, 24, 48], [274, 58, 24, 48], [298, 130, 24, 24]], [], [[82, 82, 48, 48], [394, 394, 48, 48]]]
   ,[[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10], [466, 346, 24, 144], [322, 346, 168, 24], [346, 370, 24, 24], [346, 442, 24, 48], [274, 466, 216, 24], [226, 346, 72, 24], [226, 322, 24, 144], [274, 298, 24, 48], [298, 298, 48, 24], [298, 250, 24, 48], [274, 226, 24, 48], [322, 226, 24, 48], [346, 250, 144, 24], [466, 226, 24, 96], [370, 298, 72, 24], [370, 226, 24, 96], [418, 82, 24, 144], [442, 58, 24, 48], [466, 130, 24, 72], [466, 10, 24, 24], [394, 10, 48, 24], [370, 34, 48, 24], [370, 34, 24, 72], [322, 82, 72, 24], [322, 34, 24, 48], [202, 58, 120, 24], [274, 10, 24, 24], [226, 34, 24, 24], [394, 178, 24, 24], [322, 130, 96, 24], [346, 178, 24, 24], [298, 154, 48, 24], [226, 178, 96, 24], [226, 202, 24, 48], [202, 250, 48, 48], [178, 274, 24, 72], [82, 322, 120, 24], [10, 322, 48, 24], [178, 370, 48, 24], [130, 418, 96, 24], [106, 466, 96, 24], [34, 466, 48, 24], [58, 442, 24, 24], [34, 418, 72, 24], [10, 370, 144, 24], [130, 346, 24, 24], [34, 274, 120, 24], [130, 226, 24, 72], [82, 226, 96, 24], [154, 202, 48, 24], [34, 34, 24, 120], [34, 154, 144, 24], [178, 178, 24, 24], [58, 178, 24, 24], [178, 106, 24, 48], [154, 106, 48, 24], [154, 10, 24, 72], [178, 10, 24, 24], [130, 34, 24, 24], [58, 34, 48, 24], [202, 82, 24, 24], [250, 82, 24, 72], [274, 106, 24, 24], [226, 130, 24, 24], [106, 202, 24, 24], [10, 226, 48, 24], [10, 202, 24, 48]], [], [[274, 394, 48, 48]]]
   ,[[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10], [10, 10, 72, 24], [34, 34, 24, 48], [58, 58, 24, 24], [106, 34, 96, 24], [106, 34, 24, 120], [58, 154, 144, 24], [178, 178, 24, 72], [130, 274, 72, 24], [130, 298, 24, 72], [82, 322, 72, 24], [82, 274, 24, 48], [58, 178, 24, 120], [10, 106, 24, 168], [58, 106, 48, 24], [178, 58, 24, 48], [154, 82, 24, 48], [202, 82, 24, 48], [226, 106, 72, 24], [226, 130, 24, 96], [250, 154, 48, 24], [250, 202, 216, 24], [442, 82, 24, 144], [442, 10, 24, 48], [466, 10, 24, 24], [370, 82, 48, 24], [394, 34, 24, 72], [370, 10, 24, 48], [322, 58, 24, 144], [298, 58, 48, 24], [298, 10, 48, 24], [250, 34, 24, 48], [226, 10, 24, 48], [346, 226, 24, 96], [370, 250, 96, 24], [442, 274, 24, 24], [394, 298, 24, 48], [418, 322, 72, 24], [442, 466, 48, 24], [394, 418, 24, 72], [346, 418, 48, 24], [346, 442, 24, 24], [274, 466, 48, 24], [346, 370, 120, 24], [442, 370, 24, 72], [226, 346, 144, 24], [250, 298, 24, 48], [226, 298, 72, 24], [226, 250, 96, 24], [322, 298, 24, 24], [178, 322, 24, 96], [154, 394, 96, 24], [226, 370, 24, 96], [178, 442, 48, 24], [130, 466, 72, 24], [130, 442, 24, 24], [82, 370, 24, 120], [106, 394, 24, 24], [34, 370, 24, 96], [10, 418, 24, 24], [10, 322, 48, 24], [10, 298, 24, 24], [466, 154, 24, 24]], [], [[370, 130, 48, 48]]]
   ,[[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10], [10, 10, 120, 24], [106, 34, 144, 24], [226, 58, 24, 24], [178, 58, 24, 24], [106, 82, 48, 24], [106, 106, 24, 24], [34, 58, 48, 24], [58, 82, 24, 72], [10, 130, 48, 24], [10, 106, 24, 24], [178, 106, 24, 48], [154, 130, 24, 72], [178, 178, 24, 96], [202, 202, 48, 24], [226, 106, 24, 72], [250, 106, 96, 24], [322, 82, 24, 144], [346, 202, 24, 72], [370, 250, 120, 24], [466, 250, 24, 48], [418, 202, 24, 72], [394, 202, 72, 24], [442, 130, 24, 96], [490, 82, 0, 0], [490, 82, 0, 0], [418, 82, 72, 24], [370, 82, 24, 24], [274, 154, 24, 48], [298, 178, 24, 24], [274, 226, 24, 48], [226, 250, 96, 24], [226, 274, 24, 48], [250, 298, 72, 24], [274, 322, 24, 48], [226, 370, 120, 24], [322, 346, 24, 48], [226, 346, 24, 24], [346, 298, 48, 24], [370, 322, 24, 72], [370, 370, 120, 24], [466, 322, 24, 48], [418, 322, 48, 24], [418, 298, 24, 48], [418, 394, 24, 24], [466, 418, 24, 72], [370, 442, 96, 24], [370, 418, 24, 48], [298, 442, 48, 24], [298, 418, 24, 72], [178, 466, 144, 24], [226, 418, 48, 24], [226, 442, 24, 24], [10, 418, 24, 72], [34, 466, 24, 24], [82, 466, 72, 24], [58, 418, 144, 24], [178, 298, 24, 144], [130, 298, 48, 24], [58, 298, 48, 24], [58, 322, 24, 96], [34, 370, 24, 24], [10, 322, 24, 24], [10, 202, 24, 96], [34, 178, 24, 48], [34, 178, 96, 24], [106, 154, 24, 48], [58, 250, 24, 48], [82, 226, 24, 48], [82, 226, 72, 24], [130, 250, 24, 24], [442, 10, 24, 48], [370, 34, 72, 24], [322, 10, 24, 48], [274, 10, 48, 24], [274, 34, 24, 48]], [], [[106, 346, 48, 48]]]
   ,[[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10], [10, 10, 24, 24], [58, 34, 72, 24], [106, 58, 120, 24], [202, 34, 24, 48], [154, 10, 24, 24], [34, 58, 48, 24], [34, 82, 24, 72], [58, 130, 24, 24], [82, 106, 24, 96], [106, 178, 24, 72], [34, 250, 144, 24], [58, 226, 24, 216], [10, 178, 24, 48], [34, 178, 24, 24], [34, 298, 72, 24], [34, 346, 24, 24], [10, 394, 24, 48], [10, 466, 24, 24], [58, 466, 48, 24], [82, 418, 72, 24], [130, 442, 120, 24], [178, 370, 24, 72], [226, 394, 24, 48], [250, 394, 72, 24], [298, 370, 24, 48], [226, 346, 48, 24], [250, 274, 24, 72], [274, 322, 24, 24], [178, 322, 24, 24], [130, 298, 96, 24], [202, 274, 24, 48], [154, 226, 168, 24], [298, 250, 24, 48], [298, 274, 168, 24], [442, 274, 24, 120], [394, 370, 48, 24], [394, 322, 24, 48], [370, 322, 48, 24], [442, 418, 24, 48], [418, 442, 24, 24], [346, 394, 72, 24], [346, 370, 24, 48], [322, 298, 24, 48], [370, 418, 24, 48], [274, 442, 120, 24], [250, 34, 216, 24], [442, 58, 24, 120], [394, 154, 48, 24], [322, 58, 24, 24], [250, 58, 24, 72], [130, 106, 120, 24], [130, 106, 24, 48], [154, 178, 48, 24], [178, 154, 24, 72], [178, 154, 72, 24], [226, 178, 72, 24], [274, 106, 24, 48], [298, 130, 48, 24], [322, 106, 24, 96], [346, 154, 24, 96], [394, 178, 24, 96], [442, 202, 24, 48], [466, 226, 24, 24]], [], [[370, 82, 48, 48]]]
   ,[[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10], [10, 34, 24, 24], [58, 10, 24, 96], [58, 10, 48, 24], [82, 58, 120, 24], [130, 34, 24, 24], [178, 10, 48, 24], [226, 10, 24, 480], [178, 82, 24, 24], [178, 130, 24, 72], [58, 178, 144, 24], [58, 130, 24, 48], [34, 82, 24, 72], [10, 178, 24, 24], [10, 226, 96, 24], [34, 274, 24, 24], [82, 250, 24, 48], [10, 322, 96, 24], [10, 322, 24, 48], [10, 466, 24, 24], [10, 394, 24, 48], [82, 346, 24, 24], [58, 370, 24, 72], [58, 370, 144, 24], [178, 394, 24, 48], [178, 466, 24, 24], [58, 466, 24, 24], [202, 322, 120, 24], [130, 322, 48, 24], [130, 274, 24, 72], [154, 274, 48, 24], [154, 226, 24, 48], [130, 226, 120, 24], [250, 34, 48, 24], [274, 58, 24, 24], [274, 106, 24, 48], [274, 178, 72, 24], [322, 154, 144, 24], [442, 34, 24, 96], [346, 34, 96, 24], [322, 34, 24, 120], [418, 178, 24, 48], [442, 202, 48, 24], [466, 202, 24, 72], [418, 250, 48, 24], [394, 274, 48, 24], [370, 202, 24, 48], [274, 226, 120, 24], [250, 274, 24, 24], [298, 250, 24, 72], [322, 274, 48, 24], [346, 298, 24, 168], [274, 442, 120, 24], [418, 442, 72, 24], [418, 394, 24, 48], [442, 370, 24, 48], [394, 370, 24, 48], [466, 298, 24, 48], [370, 322, 72, 24]], [], [[106, 106, 48, 48], [274, 370, 48, 48]]]
   ,[[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10], [34, 34, 48, 24], [58, 58, 24, 48], [82, 58, 120, 24], [154, 10, 24, 72], [106, 10, 48, 24], [10, 82, 24, 24], [34, 130, 48, 24], [34, 130, 24, 168], [58, 274, 144, 24], [178, 226, 24, 48], [82, 226, 72, 24], [106, 202, 24, 24], [82, 178, 120, 24], [178, 106, 24, 96], [202, 10, 24, 24], [250, 10, 48, 24], [226, 58, 24, 48], [202, 130, 96, 24], [274, 106, 24, 48], [274, 58, 72, 24], [322, 34, 24, 72], [346, 10, 24, 48], [322, 82, 48, 24], [394, 34, 24, 48], [418, 34, 48, 24], [442, 10, 24, 48], [442, 82, 24, 72], [394, 130, 48, 24], [394, 106, 24, 24], [370, 178, 120, 24], [466, 202, 24, 72], [466, 298, 24, 24], [466, 346, 24, 48], [442, 418, 24, 72], [394, 418, 48, 24], [394, 442, 24, 24], [394, 370, 48, 24], [418, 322, 24, 48], [178, 322, 240, 24], [226, 298, 24, 192], [250, 442, 24, 24], [298, 442, 72, 24], [346, 346, 24, 96], [322, 226, 24, 96], [370, 274, 72, 24], [418, 226, 24, 72], [346, 226, 48, 24], [322, 130, 48, 24], [322, 154, 24, 48], [226, 178, 120, 24], [250, 154, 24, 24], [274, 202, 24, 120], [226, 226, 24, 48], [202, 226, 24, 24], [106, 370, 96, 24], [106, 394, 24, 48], [106, 466, 24, 24], [34, 442, 48, 24], [34, 418, 24, 48], [34, 394, 96, 24], [10, 322, 24, 48], [58, 322, 24, 48], [82, 322, 72, 24]], [], [[154, 418, 48, 48]]]
   ,[[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10], [106, 34, 24, 96], [10, 106, 72, 24], [10, 154, 24, 48], [58, 154, 168, 24], [202, 130, 48, 24], [154, 106, 24, 24], [154, 10, 24, 72], [202, 10, 24, 96], [250, 10, 48, 24], [250, 58, 24, 48], [274, 82, 24, 120], [298, 58, 24, 48], [322, 34, 24, 48], [346, 34, 120, 24], [370, 82, 120, 24], [346, 106, 24, 48], [322, 130, 24, 72], [346, 178, 24, 48], [370, 202, 24, 48], [370, 106, 24, 24], [418, 106, 24, 96], [394, 154, 24, 24], [442, 130, 24, 24], [466, 178, 24, 72], [418, 226, 72, 24], [418, 226, 24, 120], [394, 322, 72, 24], [442, 274, 24, 24], [250, 178, 24, 72], [154, 202, 120, 24], [106, 178, 24, 72], [82, 226, 24, 48], [58, 202, 24, 24], [10, 226, 24, 72], [34, 250, 24, 24], [58, 298, 24, 168], [10, 418, 24, 72], [10, 370, 24, 24], [34, 322, 24, 24], [106, 370, 24, 120], [130, 370, 120, 24], [226, 418, 24, 72], [274, 370, 24, 48], [274, 442, 24, 48], [274, 442, 72, 24], [322, 394, 24, 72], [370, 370, 24, 96], [394, 394, 72, 24], [442, 418, 24, 48], [418, 442, 24, 24], [466, 370, 24, 24], [418, 370, 24, 24], [322, 346, 48, 24], [202, 322, 144, 24], [322, 298, 48, 24], [346, 274, 48, 24], [298, 226, 48, 24], [298, 250, 24, 24], [274, 298, 24, 24], [250, 274, 24, 24], [82, 274, 144, 24], [202, 226, 24, 72], [106, 322, 24, 48], [154, 250, 24, 96]], [], [[34, 34, 48, 48]]]
   ,[[[0, 0, 10, 500], [0, 0, 500, 10], [490, 0, 10, 500], [0, 490, 500, 10]], [[299, 264, 33, 33], [368, 264, 31, 34], [270, 341, 172, 25], [419, 313, 23, 53]], []]
];

let operating_level_number = 0;
let operating_level = riwni1[operating_level_number];

const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

isTouching = false;
canvas.addEventListener('touchstart', () => isTouching = true);
canvas.addEventListener('touchend', () => isTouching = false);

canvas.width = 500;
canvas.height = 500;

const keys = [];

let touchPosition = { x: 0, y: 0 }; // Зберігає координати дотику
let start_touchPosition = { x: 0, y: 0 };
let kaka = true;

// Обробник дотику
canvas.addEventListener('touchmove', event => {
    const touch = event.touches[0];
    const rect = canvas.getBoundingClientRect();

    touchPosition.x = touch.clientX - rect.left;
    touchPosition.y = touch.clientY - rect.top;
});

canvas.addEventListener('touchstart', event => {
    const touch = event.touches[0];
    const rect = canvas.getBoundingClientRect();

    start_touchPosition.x = touch.clientX - rect.left;
    start_touchPosition.y = touch.clientY - rect.top;
});

// Обробка подій клавіатури
window.addEventListener('keydown', e => {
    if (!keys.includes(e.code)) keys.push(e.code);
});

window.addEventListener('keyup', e => {
    if (keys.includes(e.code)) keys.splice(keys.indexOf(e.code), 1);
});

// Клас гравця
class Player {
    constructor() {
        this.size = 6;
        this.x = 57 - this.size / 2;
        this.y = 57 - this.size / 2;
        this.speed = 2;
    }

    draw() {
        ctx.fillStyle = 'red';
        ctx.fillRect(this.x, this.y, this.size, this.size);
    }

    update() {
        // Рух для телефону
        if (isTouching) {
            // Розрахунок вектора напрямку
            const deltaX = touchPosition.x - start_touchPosition.x;
            const deltaY = touchPosition.y - start_touchPosition.y;

            // Нормалізація вектора
            const magnitude = Math.sqrt(deltaX ** 2 + deltaY ** 2);
            const normX = Math.round(deltaX / magnitude || 0); // Уникнення ділення на 0
            const normY = Math.round(deltaY / magnitude || 0);

            // Зміщення по обох осях
            const oldpos_x = this.x;
            this.x += normX * this.speed;
            for (const wall of operating_level[0]) if (checkCollision(wall)) this.x = oldpos_x;
        
            const oldpos_y = this.y;
            this.y += normY * this.speed;
            for (const wall of operating_level[0]) if (checkCollision(wall)) this.y = oldpos_y;

        } else {
            // Рух для ПК
            const oldpos_x = this.x;
            this.x += this.speed * Math.sign(keys.indexOf('ArrowRight') - keys.indexOf('ArrowLeft'));
            if (oldpos_x == this.x) this.x += this.speed * Math.sign(keys.indexOf('KeyD') - keys.indexOf('KeyA'));
            for (const wall of operating_level[0]) if (checkCollision(wall)) this.x = oldpos_x;

            const oldpos_y = this.y;
            this.y += this.speed * Math.sign(keys.indexOf('ArrowDown') - keys.indexOf('ArrowUp'));
            if (oldpos_y == this.y) this.y += this.speed * Math.sign(keys.indexOf('KeyS') - keys.indexOf('KeyW'));
            for (const wall of operating_level[0]) if (checkCollision(wall)) this.y = oldpos_y;
        }
    }
}


const player = new Player();
    
function checkCollision(wall) {
    return player.x < wall[0] + wall[2] &&
        player.x + player.size > wall[0] &&
        player.y < wall[1] + wall[3] &&
        player.y + player.size > wall[1] 
}

function update_walls() {
    ctx.fillStyle = 'black';
    for (const wall of operating_level[0]) ctx.fillRect(...wall);
}

function update_finish() {
    ctx.fillStyle = 'green';
    for (const wall of operating_level[2]) {
        ctx.fillRect(...wall);
        if (checkCollision(wall)) {
            operating_level_number += 1;
            operating_level = riwni1[operating_level_number];
            if (operating_level_number == riwni1.length-1) player.size *= 2;
        }
    }
}

function update_other_rects() {
    ctx.fillStyle = 'blue';
    for (const wall of operating_level[1]) {
        ctx.fillRect(...wall);
    }
}

function drawBackground() {
    ctx.fillStyle = 'cyan';
    ctx.fillRect(0, 0, canvas.width, canvas.height);
}

function gameLoop() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    drawBackground();
    update_walls();
    update_other_rects();
    player.draw();
    player.update();
    update_finish();
    requestAnimationFrame(gameLoop);
}

gameLoop();